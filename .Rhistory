peference, Code, (Onglet) Saving, mettre Default text encoding à UTF-8.
peference, Code, (Onglet) Saving, mettre Default text encoding à UTF-8.
# Je jette un coup d'oeil à la bd dans ma console.
head(mtcars)
str(mtcars)
# Ensuite, j'utilise la fonction R de base «library» pour indiquer à mon RStudio que je vais utiliser ce package dans mon code.
# Cette ligne, quant à elle, est à rouler à CHAQUE nouvelle ouverture de RStudio.
library("tidyverse")
install.packages("tidyverse")
# Je load la base de données mtcars, qui est intégrée déjà dans R, et je l'assigne à «data».
data <- mtcars
# Je jette un coup d'oeil à la bd qu'on a assigné à «data» dans ma console. C'est la même chose que mtcars, on l'a juste changée de nom!
tail(data)
# Je crée plein de vecteurs, et je les assigne.
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
# Ensuite, j'utilise la fonction R de base «library» pour indiquer à mon RStudio que je vais utiliser ce package dans mon code.
# Cette ligne, quant à elle, est à rouler à CHAQUE nouvelle ouverture de RStudio.
library("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
# Je load la base de données mtcars, qui est intégrée déjà dans R, et je l'assigne à «data».
data <- starwars
starwars
head(mtcars)
(data)
View(data)
View(data)
View(data)
# Je jette un coup d'oeil à la bd dans ma console.
head(mtcars)
# Je load la base de données mtcars, qui est intégrée déjà dans R, et je l'assigne à «data».
data <- starwars
peference, Code, (Onglet) Saving, mettre Default text encoding à UTF-8.
str(data)
str(data)
(data)
str(mtcars)
str(data)
str(data)
data <- starwars
str(data)
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", 'Gas giant')
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
# Je crée un dataframe à partir de tout ces vecteurs.
planets_df <- data.frame(name, type, diameter,rotation, rings)
# J'ouvre le dataframe dans ma console. Chaque colonne est une variable (un vector) qu'on a créé, chaque ligne est une observation!
planets_df
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
# Je jette un coup d'oeil à la bd qu'on a assigné à «data» dans ma console. C'est la même chose que mtcars, on l'a juste changée de nom!
glimpse(data)
str(data)
# Je crée plein de vecteurs, et je les assigne.
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", 'Gas giant')
# Je crée un dataframe à partir de tout ces vecteurs.
planets_df <- data.frame(name, type, diameter,rotation, rings)
# Pour mesurer l'association entre le fait d'être une femme, et le fait d'avoir survécu au naufrage.
cor(dataTitanic$femme, dataTitanic$survie, method = "kendall")
print("Vive la métho!")
# Pour mesurer l'association entre le fait d'être une femme, et le fait d'avoir survécu au naufrage.
cor(dataTitanic$femme, dataTitanic$survie, method = "kendall")
print("Vive la métho!")
?print()
hist(dataMovie$year)
library(ggplot2) # mais déjà dans Tidyverse!
ggplot(dataMovie, aes(x = year)) +
install.packages("RQDA")
install.packages("RQDA")
install.packages("RQDA")
data_prepped <- readRDS("~/analyse_textuelle_atelier_fss/data/data_prepped.rds")
View(data_prepped)
View(data_prepped)
View(data_prepped)
View(data_prepped)
View(data_prepped)
View(data_prepped)
View(data_prepped)
knitr::opts_chunk$set(echo = TRUE)
